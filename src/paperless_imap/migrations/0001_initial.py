# Generated by Django 5.2.5 on 2025-08-22 00:17

import django.core.validators
import django.db.models.deletion
import paperless_imap.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('documents', '1068_alter_document_created'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IMAPAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Nom descriptif pour identifier le compte', max_length=100, verbose_name='Nom du compte')),
                ('server', models.CharField(help_text='Adresse du serveur IMAP (ex: imap.gmail.com)', max_length=255, verbose_name='Serveur IMAP')),
                ('port', models.IntegerField(default=993, help_text='Port de connexion IMAP (993 pour SSL, 143 pour STARTTLS)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Port')),
                ('use_ssl', models.BooleanField(default=True, help_text='Connexion sécurisée via SSL/TLS', verbose_name='Utiliser SSL')),
                ('use_starttls', models.BooleanField(default=False, help_text='Activer STARTTLS pour la sécurisation', verbose_name='Utiliser STARTTLS')),
                ('auth_method', models.CharField(choices=[('basic', 'Authentification basique'), ('oauth2', 'OAuth2')], default='basic', max_length=20, verbose_name="Méthode d'authentification")),
                ('username', models.CharField(help_text="Adresse e-mail ou nom d'utilisateur", max_length=255, verbose_name="Nom d'utilisateur")),
                ('encrypted_password', models.TextField(blank=True, verbose_name='Mot de passe chiffré')),
                ('oauth2_client_id', models.CharField(blank=True, max_length=255, verbose_name='Client ID OAuth2')),
                ('oauth2_client_secret', models.TextField(blank=True, verbose_name='Client Secret OAuth2')),
                ('oauth2_refresh_token', models.TextField(blank=True, verbose_name='Refresh Token OAuth2')),
                ('oauth2_access_token', models.TextField(blank=True, verbose_name='Access Token OAuth2')),
                ('oauth2_token_expires', models.DateTimeField(blank=True, null=True, verbose_name='Expiration du token')),
                ('folders_to_sync', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, help_text="Liste des dossiers IMAP à surveiller (ex: ['INBOX', 'Sent'])", verbose_name='Dossiers à synchroniser')),
                ('attachment_extensions', models.JSONField(default=paperless_imap.models.default_attachment_extensions, help_text='Extensions de fichiers à extraire automatiquement', verbose_name='Extensions de pièces jointes')),
                ('max_attachment_size', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)], verbose_name='Taille max des pièces jointes (MB)')),
                ('sender_whitelist', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, help_text='Adresses e-mail autorisées (vide = toutes)', verbose_name='Liste blanche expéditeurs')),
                ('sender_blacklist', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, help_text='Adresses e-mail à ignorer', verbose_name='Liste noire expéditeurs')),
                ('subject_keywords', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, help_text='Mots-clés requis dans le sujet pour traitement', verbose_name='Mots-clés dans le sujet')),
                ('sync_interval', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1440)], verbose_name='Intervalle de synchronisation (minutes)')),
                ('auto_process_attachments', models.BooleanField(default=True, verbose_name='Traitement automatique des pièces jointes')),
                ('auto_extract_events', models.BooleanField(default=True, verbose_name="Extraction automatique d'événements")),
                ('auto_categorize', models.BooleanField(default=True, verbose_name='Catégorisation automatique')),
                ('is_active', models.BooleanField(default=True, verbose_name='Compte actif')),
                ('last_sync', models.DateTimeField(blank=True, null=True, verbose_name='Dernière synchronisation')),
                ('last_uid', models.IntegerField(default=0, help_text='UID du dernier e-mail traité pour synchronisation incrémentielle', verbose_name='Dernier UID traité')),
                ('sync_errors', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Erreurs de synchronisation')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imap_accounts', to=settings.AUTH_USER_MODEL, verbose_name='Propriétaire')),
            ],
            options={
                'verbose_name': 'Compte IMAP',
                'verbose_name_plural': 'Comptes IMAP',
                'ordering': ['name'],
                'unique_together': {('server', 'username', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_id', models.CharField(help_text='ID unique du message e-mail', max_length=255, verbose_name='Message ID')),
                ('uid', models.IntegerField(help_text='UID unique dans le serveur IMAP', verbose_name='UID IMAP')),
                ('folder', models.CharField(default='INBOX', max_length=255, verbose_name='Dossier IMAP')),
                ('subject', models.CharField(max_length=998, verbose_name='Sujet')),
                ('sender', models.EmailField(max_length=254, verbose_name='Expéditeur')),
                ('recipients', models.JSONField(default=paperless_imap.models.default_empty_list, help_text='Liste des adresses destinataires', verbose_name='Destinataires')),
                ('cc_recipients', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Destinataires en copie')),
                ('bcc_recipients', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Destinataires en copie cachée')),
                ('date_sent', models.DateTimeField(verbose_name="Date d'envoi")),
                ('date_received', models.DateTimeField(auto_now_add=True, verbose_name='Date de réception')),
                ('body_text', models.TextField(blank=True, verbose_name='Corps du message (texte)')),
                ('body_html', models.TextField(blank=True, verbose_name='Corps du message (HTML)')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('is_flagged', models.BooleanField(default=False, verbose_name='Marqué')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('normal', 'Normale'), ('high', 'Haute'), ('urgent', 'Urgente')], default='normal', max_length=20, verbose_name='Priorité')),
                ('category', models.CharField(choices=[('personal', 'Personnel'), ('professional', 'Professionnel'), ('promotional', 'Promotionnel'), ('social', 'Social'), ('updates', 'Mises à jour'), ('forums', 'Forums'), ('other', 'Autre')], default='other', max_length=20, verbose_name='Catégorie')),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Score de confiance catégorisation')),
                ('extracted_keywords', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Mots-clés extraits')),
                ('detected_language', models.CharField(blank=True, max_length=10, verbose_name='Langue détectée')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Traité')),
                ('processing_errors', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Erreurs de traitement')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails', to='paperless_imap.imapaccount', verbose_name='Compte IMAP')),
            ],
            options={
                'verbose_name': 'E-mail',
                'verbose_name_plural': 'E-mails',
                'ordering': ['-date_sent'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Début')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Fin')),
                ('status', models.CharField(choices=[('running', 'En cours'), ('success', 'Succès'), ('error', 'Erreur'), ('cancelled', 'Annulé')], default='running', max_length=20, verbose_name='Statut')),
                ('emails_processed', models.IntegerField(default=0, verbose_name='E-mails traités')),
                ('attachments_processed', models.IntegerField(default=0, verbose_name='Pièces jointes traitées')),
                ('events_extracted', models.IntegerField(default=0, verbose_name='Événements extraits')),
                ('errors_count', models.IntegerField(default=0, verbose_name="Nombre d'erreurs")),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('details', models.JSONField(blank=True, default=paperless_imap.models.default_empty_dict, verbose_name='Détails')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='paperless_imap.imapaccount', verbose_name='Compte IMAP')),
            ],
            options={
                'verbose_name': 'Log de synchronisation',
                'verbose_name_plural': 'Logs de synchronisation',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='EmailEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('meeting', 'Réunion'), ('appointment', 'Rendez-vous'), ('deadline', 'Échéance'), ('reminder', 'Rappel'), ('task', 'Tâche'), ('other', 'Autre')], default='other', max_length=20, verbose_name="Type d'événement")),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de début')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Date de fin')),
                ('all_day', models.BooleanField(default=False, verbose_name='Toute la journée')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Lieu')),
                ('attendees', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Participants')),
                ('confidence_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Score de confiance')),
                ('source_text', models.TextField(blank=True, verbose_name='Texte source')),
                ('extracted_keywords', models.JSONField(blank=True, default=paperless_imap.models.default_empty_list, verbose_name='Mots-clés extraits')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Validé')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='paperless_imap.emailmessage', verbose_name='E-mail')),
            ],
            options={
                'verbose_name': 'Événement',
                'verbose_name_plural': 'Événements',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['email'], name='paperless_i_email_i_12a7e5_idx'), models.Index(fields=['event_type'], name='paperless_i_event_t_c9676a_idx'), models.Index(fields=['start_date'], name='paperless_i_start_d_150a4c_idx'), models.Index(fields=['is_validated'], name='paperless_i_is_vali_255933_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255, verbose_name='Nom du fichier')),
                ('content_type', models.CharField(max_length=255, verbose_name='Type MIME')),
                ('size', models.BigIntegerField(verbose_name='Taille (bytes)')),
                ('content', models.BinaryField(blank=True, null=True, verbose_name='Contenu binaire')),
                ('temp_file_path', models.CharField(blank=True, max_length=500, verbose_name='Chemin fichier temporaire')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Traité')),
                ('is_supported_format', models.BooleanField(default=True, verbose_name='Format supporté')),
                ('processing_error', models.TextField(blank=True, verbose_name='Erreur de traitement')),
                ('extracted_text', models.TextField(blank=True, verbose_name='Texte extrait')),
                ('detected_language', models.CharField(blank=True, max_length=10, verbose_name='Langue détectée')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Mis à jour le')),
                ('document', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_attachment', to='documents.document', verbose_name='Document Paperless')),
                ('email', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='paperless_imap.emailmessage', verbose_name='E-mail')),
            ],
            options={
                'verbose_name': 'Pièce jointe',
                'verbose_name_plural': 'Pièces jointes',
                'ordering': ['filename'],
                'indexes': [models.Index(fields=['email'], name='paperless_i_email_i_40e643_idx'), models.Index(fields=['content_type'], name='paperless_i_content_1be832_idx'), models.Index(fields=['is_processed'], name='paperless_i_is_proc_f63c17_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['account', 'uid'], name='paperless_i_account_57af51_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['sender'], name='paperless_i_sender_b86b76_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['date_sent'], name='paperless_i_date_se_91d731_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['category'], name='paperless_i_categor_b119da_idx'),
        ),
        migrations.AddIndex(
            model_name='emailmessage',
            index=models.Index(fields=['is_processed'], name='paperless_i_is_proc_2006de_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='emailmessage',
            unique_together={('account', 'message_id')},
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['account', 'start_time'], name='paperless_i_account_d77b33_idx'),
        ),
        migrations.AddIndex(
            model_name='synclog',
            index=models.Index(fields=['status'], name='paperless_i_status_755278_idx'),
        ),
    ]
