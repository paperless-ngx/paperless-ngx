# Generated by Django 4.2.11 on 2024-12-18 07:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('documents', '1109_document_page_count'),
    ]

    operations = [
        migrations.CreateModel(
            name='FontLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('match', models.CharField(blank=True, max_length=256, verbose_name='match')),
                ('matching_algorithm', models.PositiveIntegerField(choices=[(0, 'None'), (1, 'Any word'), (2, 'All words'), (3, 'Exact match'), (4, 'Regular expression'), (5, 'Fuzzy word'), (6, 'Automatic')], default=1, verbose_name='matching algorithm')),
                ('is_insensitive', models.BooleanField(default=True, verbose_name='is insensitive')),
                ('code', models.CharField(blank=True, db_index=True, max_length=20, verbose_name='code')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'language',
                'verbose_name_plural': 'languages',
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArchiveFont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('match', models.CharField(blank=True, max_length=256, verbose_name='match')),
                ('matching_algorithm', models.PositiveIntegerField(choices=[(0, 'None'), (1, 'Any word'), (2, 'All words'), (3, 'Exact match'), (4, 'Regular expression'), (5, 'Fuzzy word'), (6, 'Automatic')], default=1, verbose_name='matching algorithm')),
                ('is_insensitive', models.BooleanField(default=True, verbose_name='is insensitive')),
                ('first_upload', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='first_upload')),
                ('last_upload', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='last_upload')),
                ('note', models.TextField(blank=True, help_text='Note for the archive font', verbose_name='note')),
                ('languages', models.ManyToManyField(blank=True, related_name='archive_fonts', to='documents.fontlanguage', verbose_name='languages')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'archive_font',
                'verbose_name_plural': 'archive_fonts',
                'ordering': ('name',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='document',
            name='archive_font',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='documents.archivefont', verbose_name='archive font'),
        ),
        migrations.AddConstraint(
            model_name='fontlanguage',
            constraint=models.UniqueConstraint(fields=('name', 'owner'), name='documents_fontlanguage_unique_name_owner'),
        ),
        migrations.AddConstraint(
            model_name='fontlanguage',
            constraint=models.UniqueConstraint(condition=models.Q(('owner__isnull', True)), fields=('name',), name='documents_fontlanguage_name_uniq'),
        ),
        migrations.AddConstraint(
            model_name='archivefont',
            constraint=models.UniqueConstraint(fields=('name', 'owner'), name='documents_archivefont_unique_name_owner'),
        ),
        migrations.AddConstraint(
            model_name='archivefont',
            constraint=models.UniqueConstraint(condition=models.Q(('owner__isnull', True)), fields=('name',), name='documents_archivefont_name_uniq'),
        ),
    ]
